
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model ERPSchoolManagementWeb.Models.CustomStudentModel

<div class="content-header row">
    <div class="content-header-left col-md-6 col-12 mb-2">
        <h3 class="content-header-title">Book Appointment</h3>
        <div class="row breadcrumbs-top">
            <div class="breadcrumb-wrapper col-12">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index","Default")">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index","Student",new{area="Students"})">Students</a>
                    </li>
                    <li class="breadcrumb-item active">
                        Add Student
                    </li>
                </ol>
            </div>
        </div>
    </div>
  
</div>
<div class="content-body">
    <!-- Add School -->
    <section id="add-student">
        <div class="card">
            <div class="card-header">
                <h2 class="card-title">Add New Student</h2>
            </div>
            <div class="card-body">
                <form method="post" id="Student_Form" name="Student_Form">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>First Name: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your First Name" } })
                                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger", id = "err1" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Last Name: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.FathersName, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your Last Name" } })
                                @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger", id = "err2" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label>Email: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.FathersEmail, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your Email Address" } })
                                @Html.ValidationMessageFor(model => model.FathersEmail, "", new { @class = "text-danger", id = "err3" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label>Telephone No.</label>
                            @Html.EditorFor(model => model.EmgMobno, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter emergency mobile No.", maxlength = "20", minlength = "10", @onkeypress = "return onlyNumberKey(event)" } })
                            @Html.ValidationMessageFor(model => model.EmgMobno, "", new { @class = "text-danger", id = "err3" })

                        </div>
                        <div class="form-group col-md-6">
                            <label>Mobile No.</label>
                            @Html.EditorFor(model => model.FathersMobno, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter Mobile No.", maxlength = "10", minlength = "10", @onkeypress = "return onlyNumberKey(event)" } })
                            @Html.ValidationMessageFor(model => model.FathersMobno, "", new { @class = "text-danger", id = "err4" })

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Password: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your Class" } })
                                @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger", id = "err5" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Conform Password: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your Section" } })
                                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger", id = "err6" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Date of Birth: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.StudentDob, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your Date of Birth" } })
                                @Html.ValidationMessageFor(model => model.StudentDob, "", new { @class = "text-danger", id = "err7" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Date of Joining: <span class="text-danger" style="font-size:25px;font-weight:bold;">*</span></label>
                                @Html.EditorFor(model => model.StudentAddress, new { htmlAttributes = new { @class = "form-control rounded-right", @placeholder = "Enter your Address" } })
                                @Html.ValidationMessageFor(model => model.StudentAddress, "", new { @class = "text-danger", id = "err8" })
                            </div>
                        </div>
                    </div>

                    <div class="card-footer ml-auto">
                        <a href="#" class="btn btn-outline-success mr-1" id="submitAddStudent">Submit</a>
                       <a href="#" class="btn btn-outline-danger" id="cancelAddTeacher">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </section>
</div>

@section Scripts {


    <script>
        function onlyNumberKey(evt) {

            var ASCIICode = (evt.which) ? evt.which : evt.keyCode
            if (ASCIICode > 31 && (ASCIICode < 48 || ASCIICode > 57))
                return false;
            return true;
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#submitAddStudent').click(function () {
                /*if (StudentValidation()) {*/
                    GetStudent();
               // }
            });

        });
    </script>

    <script type="text/javascript">
        function StudentValidation() {
            var isvalid = true;
            var firstname = $('#FirstName').val();
            var lastname = $('#LastName').val();
            var contact = $('#PhoneNo').val();
            var mobile = $('#MobileNo').val();
            var email = $('#Email').val();
            var password = $('#Password').val();
            var cnfrm = $('#ConfirmPassword').val();

            //namecheck
            if (firstname == "") {
                document.getElementById('err1').innerHTML = "Please fill the FirstName field!";
                return false;
            }

            if ((firstname.length < 2) || (firstname.length > 100)) {
                document.getElementById('err1').innerHTML = "Length of the Firstname would be greater than 2 and less than 100";
                return false;
            }
            if (!isNaN(firstname)) {
                document.getElementById('err1').innerHTML = "Only characters are allowed";
                return false;
            }
            if (lastname == "") {
                document.getElementById('err2').innerHTML = "Please fill the LastName field!";
                return false;
            }

            if ((lastname.length < 2) || (lastname.length > 100)) {
                document.getElementById('err2').innerHTML = "Length of the LastName would be greater than 2 and less than 100";
                return false;
            }
            if (!isNaN(lastname)) {
                document.getElementById('err2').innerHTML = "Only characters are allowed";
                return false;
            }



            //email check
            if (email == "") {
                document.getElementById('err3').innerHTML = "Please fill the Email field!";
                return false;
            }

            @*if (email.indexOf('+ @ + ') <= 0) {
                document.getElementById('err5').innerHTML = "Position of '@' is not valid";
                return false;
            }*@

            if ((email.charAt(email.length - 4) != '.') && (email.charAt(email.length - 3) != '.')) {
                document.getElementById('err3').innerHTML = "Postion of '.' is invalid";
                return false;
            }

            if (password == "") {
                document.getElementById('err5').innerHTML = "Please fill the Password field!";
                return false;
            }
            if ((password.length < 5) || (password.length > 100)) {
                document.getElementById('err5').innerHTML = "Length of the Password would be greater than 5 and less than 100";
                return false;
            }
            if (cnfrm == "") {
                document.getElementById('err6').innerHTML = "Please fill the Confirm Password field!";
                return false;
            }
            if ((cnfrm.length < 5) || (cnfrm.length > 100)) {
                document.getElementById('err6').innerHTML = "Length of the Confirm Password would be greater than 5 and less than 100";
                return false;
            }
            if (password !== cnfrm) {
                document.getElementById('err6').innerHTML = "Both Passwords does not match";
                return false;
            }
            return true;
        }

    </script>


    <script type="text/javascript">
        function validatStudentform() {
            var isvalid = true;

            var firstname = $('#FirstName').val();
            var lastname = $('#LastName').val();
            var contact = $('#PhoneNo').val();
            var mobile = $('#MobileNo').val();
            var email = $('#Email').val();
            var password = $('#Password').val();
            var cnfrm = $('#ConfirmPassword').val();

            if (firstname == null || firstname == "" || lastname == null || lastname == "" || email == null || email == "") {
                alert('some fields are empty');
                isvalid = false;
            }
            return isvalid;

        }

    </script>


    <script type="text/javascript">

        function GetStudent() {
            /*if (validateStudentform()) {*/
                var result = $("#Student_Form").serialize();

                $.ajax({
                    type: "POST",
                    url: '/Students/Student/AddStudent',
                    //data: '{email: ' + JSON.stringify($('#EmailId').val()) + '}',
                    dataType: "json",

                    data: $("#Student_Form").serialize(),

                    success: function (res) {
                        if (res) {
                            alert("Student is Added.");
                            window.location.href = "/Students/Student/Index";
                        }
                    },
                    error: function (res) {

                            alert("Please try after sometime");

                    },
                });
          //  }
        }
    </script>

}
